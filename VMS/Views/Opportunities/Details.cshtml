@model VMS.Models.Opportunity
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager;

@{
    ViewData["Title"] = "Details";
}

<div class="card">
    <div class="card-body bg-light">
        <h4>All details for <strong>@Model.OpportunityName</strong></h4><hr />
        <div class="container-fluid">
            <dl class="row">
                <dt class="col-sm-3">
                    Name
                </dt>
                <dd class="col-sm-8">
                    @Model.OpportunityName
                </dd>
                @if ((bool)!Model.Virtual)
                {
                    <dt class="col-sm-3">
                        Address 1
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Address1
                    </dd>
                    <dt class="col-sm-3">
                        Address 2
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Address2
                    </dd>
                    <dt class="col-sm-3">
                        City
                    </dt>
                    <dd class="col-sm-8">
                        @Model.City
                    </dd>
                    <dt class="col-sm-3">
                        State
                    </dt>
                    <dd class="col-sm-8">
                        @Model.State
                    </dd>
                    <dt class="col-sm-3">
                        Zip
                    </dt>
                    <dd class="col-sm-8">
                        @Model.Zip
                    </dd>
                }

                <dt class="col-sm-3">
                    Country
                </dt>
                <dd class="col-sm-8">
                    @Model.Country
                </dd>
                <dt class="col-sm-3">
                    Desciption
                </dt>
                <dd class="col-sm-8">
                    @Model.Description
                </dd>
                <dt class="col-sm-3">
                    Requirements
                </dt>
                <dd class="col-sm-8">
                    @if (Model.Requirements != null)
                    {
                        <ul>
                            <li>@Html.Raw(Model.Requirements.Replace(Environment.NewLine, "<br/><li>"))</li>
                        </ul>
                    }
                    else
                    {
                        <p>None</p>
                    }

                </dd>
                <dt class="col-sm-3">
                    Start Date
                </dt>
                <dd class="col-sm-8">
                    @if (Model.StartDate != null)
                    {
                        @Model.StartDate.Date.ToString("d")
                    }
                    else
                    {
                        <p>None chosen</p>
                    }

                </dd>
                <dt class="col-sm-3">
                    End Date
                </dt>
                <dd class="col-sm-8">
                    @if ((bool)Model.OnGoing)
                    {
                        <p>On-going event</p>
                    }
                    else
                    {
                        <p>@Model.EndDate.Date.ToString("d")</p>
                    }
                </dd>
                <dt class="col-sm-3">
                    Start time
                </dt>
                <dd class="col-sm-8">
                    @Model.StartTime.ToShortTimeString()
                </dd>
                <dt class="col-sm-3">
                    End time
                </dt>
                <dd class="col-sm-8">
                    @Model.EndTime.ToShortTimeString()
                </dd>
                <dt class="col-sm-3">
                    Cause Areas
                </dt>
                <dd class="col-sm-8">
                    <p>@Model.InterestAreas</p>
                </dd>
                <dt class="col-sm-3">
                    Targeted Age Bracket
                </dt>
                <dd class="col-sm-8">
                    <p>@Model.AgeBracket</p>
                </dd>
                <dt class="col-sm-3">
                    Targeted Grade Levels
                </dt>
                <dd class="col-sm-8">
                    <p>@Model.GradeLevel</p>
                </dd>
                <dt class="col-sm-3">
                    Volunteers Needed
                </dt>
                <dd class="col-sm-8">
                    @* @Model.VolunteersNeeded*@
                    @(Model.VolunteersNeeded - Model.VolunteersApplied)
                </dd>
                <dt class="col-sm-3">
                    Virtual
                </dt>
                <dd class="col-sm-8">
                    @if ((bool)Model.Virtual)
                    {
                        <p>Yes</p>
                    }
                    else
                    {
                        <p>No</p>
                    }
                </dd>
                <dt class="col-sm-3">
                    Group Activity
                </dt>
                <dd class="col-sm-8">
                    @if ((bool)Model.GroupActivity)
                    {
                        <p>Yes</p>
                    }
                    else
                    {
                        <p>No</p>
                    }
                </dd>
                <dt class="col-sm-3">
                    Recurring activity?
                </dt>
                <dd class="col-sm-8">
                    @if ((bool)Model.IsRecurring)
                    {
                        <p>Yes</p>
                        <p>Recurring days:</p>
                        for (int i = 0; i < ViewBag.RecurringDays.Count; i++)
                        {
                            <span class="badge bg-primary">@ViewBag.RecurringDays[i]</span>
                        }
                    }
                    else
                    {
                        <p>No</p>
                    }
                </dd>
            </dl>
        </div>
    </div>
</div>




<div class="mt-3">
    <div class="col-md-12">
        <a class="btn btn-primary"href="javascript:history.go(-1)">Back</a>
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
        {
            <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        }
    </div>
</div>